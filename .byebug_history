c
response_hash["volumeInfo"]
response_hash["volumeInfo"]["imageLinks"]["thumbnail"]
c
response_hash["volumeInfo"]["imageLinks"]["thumbnail"]
c
response_hash["volumeInfo"]["imageLinks"]["thumbnail"]
c
response_hash
response_hash["volumeInfo"]
response_hash["volumeInfo"]["publishedDate"]
c
response_hash["volumeInfo"]["publishedDate"]
c
response_hash["volumeInfo"]["publishedDate"]
c
continue
c
params_hash
c
response.body
response
url
c
GOOGLE_BOOKS_API_KEY
c
ENV["GOOGLE_BOOKS_API_KEY"]
ENV["IMDB_API_KEY"]
IMDB_API_KEY
c
response
c
url
c
IMDB_API_KEY
search
c
medium["volumeInfo"]
medium["volumeInfo"]["imageLinks"]
medium["volumeInfo"]["imageLinks"]["thumbnail"]
medium["volumeInfo"]["title"]
medium["id"]
medium
c
data_as_hash
c
options["imdb"]
options["google_books"]
options
c
responses[0]["title"]
responses[0]
responses
c
JSON.parse(response["response"].to_json.gsub("=>", ":"))
JSON.parse(response["response"].to_json)
response["response"].to_json
response
response.to_json
response
JSON.parse new_response
new_response
new_response = response["response"].gsub("=>", ":")
response["response"].gsub("=>", ":")
response["response"]
response["response']
c
orig_media_season
params_object[:series_exists]
media_user
c
media_user
c
response.body
response
c
MediaSeason.find_by(medium_id: 16)
MediaSeason.find_by(medium_id: media.id)
media_season
c
media
c
params[:id].to_i
params[:id].to)i
params[:id]
params
c
data_as_hash["title"]
data_as_hash
c
send_media
c
send_media
attributes
c
data_as_hash["results"][3]
data_as_hash["results"][8]
data_as_hash["results"][9]
data_as_hash["results"][0]["id"]
data_as_hash["results"][0][:id
data_as_hash["results"][0]
data_as_hash["results"]
data_as_hash
c
send_media.map{ |medium| medium.attributes["title"] }
send_media.map{ |medium| medium.attributes }
send_media.attributes
send_media
c
options["consumed"]
options[:consumed]
options[:"consumed"]
option[:"consumed"]
option["consumed"]
option[:consumed]
options
c
JSON.parse(params[:options])
params
c
url
c
data_as_json["name"]
c
data_as_json[:name]
data_as_json.name
data_as_json
c
return_data
c
media_params[:series_exists]
c
session[:user_id]
c
params[:search]
c
sorted_media
c
media
c
media
c
params[:search]
params
search
:search
c
"true".to_b
"".to_b
0.methods
0.to_b
media_params[:series_exists].to_b
c
media_params[:series_exists]
c
media_params[:series_exists]
c
media_params[:title]
c
orig_creators_objects
c
orig_creators_objects
c
orig_creators_ids_strings
c
media_params[:creator_ids]
c
orig_season
c
pp params
params
c
media.media_seasons
media.media_season
meadia.media_season
media
c
MediaSeason.find_by(number: media_params[:media_number], season: season)
season
c
season
c
series
c
existing_series
c
creator
c
creator
c
creator_to_add
c
creators_strings
c
media_type
c
media_params
c
media_params
c
media_params
c
media_params
c
params
